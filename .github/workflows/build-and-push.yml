name: "Build and push"

on:
  workflow_call:
    inputs:

      image-name:
        description: "Mandatory name of the image to build"
        required: true
        type: string

      build-args:
        description: "Optional build arguments, takes a YAML multiline string | with ENV=variables"
        required: false
        type: string
      image-tags:
        description: "Optional additional image tags, takes a YAML multiline string |"
        required: false
        type: string
      context:
        description: "Optional build context, defaults to ./ in the checkout root"
        required: false
        type: string
      file:
        description: "Optional path to a Dockerfile to build, relative to the build context"
        default: "Dockerfile"
        required: false
        type: string

      release:
        description: "Optional toggle for disabling Google Container Registry"
        default: true
        required: false
        type: boolean
      archive:
        description: "Optional toggle for disabling GitHub Container Registry"
        default: true
        required: false
        type: boolean
      publish:
        description: "Optional toggle for disabling Docker Hub Registry"
        default: true
        required: false
        type: boolean

    outputs:
      # https://github.com/docker/build-push-action#outputs
      imageid:
        description: "Image ID, String"
        value: ${{ jobs.build-and-push.outputs.imageid }}
      digest:
        description: "Image digest, String"
        value: ${{ jobs.build-and-push.outputs.digest }}
      metadata:
        description: "Build result metadata, JSON"
        value: ${{ jobs.build-and-push.outputs.metadata }}

jobs:

  build-and-push:

    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write

    outputs:
      imageid:  ${{ steps.build-push.outputs.imageid }}
      digest:   ${{ steps.build-push.outputs.digest }}
      metadata: ${{ steps.build-push.outputs.metadata }}

    steps:

    -
      name: Checkout repository
      uses: actions/checkout@v3

    -
      name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: "${{ vars.GC_WLI_PROVIDER }}"
        service_account:            "${{ vars.GC_WLI_SA }}"
        token_format:               "access_token"

    -
      name: Login to Google Cloud Container Registry
      uses: docker/login-action@v2
      with:
        registry: "${{ vars.GC_REGISTRY }}"
        username: "oauth2accesstoken"
        password: "${{ steps.auth.outputs.access_token }}"

    -
      name: Login to Docker Hub Registry
      uses: docker/login-action@v2
      with:
        registry: "docker.io"
        username: "${{ vars.DH_USERNAME }}"
        password: "${{ secrets.DH_TOKEN }}"

    -
      name: Login to GitHub Packages Registry
      uses: docker/login-action@v2
      with:
        registry: "ghcr.io"
        username: "${{ github.actor }}"
        password: "${{ secrets.GITHUB_TOKEN }}"

    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          name=${{ vars.GC_REGISTRY }}/${{ vars.GC_PROJECT_ID }}/${{ inputs.image-name }},enable=${{ inputs.release }}
          name=docker.io/${{ vars.DH_ORGANIZATION }}/${{ inputs.image-name }},enable=${{ inputs.publish }}
          name=ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }},enable=${{ inputs.archive }}
        labels: |
          org.opencontainers.image.title=${{ inputs.image-name }}
          org.opencontainers.image.vendor=CirclesUBI
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          {{ tag }}
          {{ base_ref }}
          {{ branch }}
          type=sha,prefix={{branch}}-
          {{ sha }}
          ${{ inputs.image-tags }}
        build-args: |
          BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

    -
      name: Build and push Container image
      uses: docker/build-push-action@v3
      id: build-push
      with:
        push: true
        context:    "${{ inputs.context }}"
        file:       "${{ inputs.file }}"
        build-args: "${{ inputs.build-args }}"
        labels:     "${{ steps.meta.outputs.labels }}"
        tags:       "${{ steps.meta.outputs.tags }}"
